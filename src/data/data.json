{
    "profile": {
      "name": "Jônathan Faria",
      "title": "Desenvolvedor Fullstack Jr",
      "about": "Sou graduado em Análise e Desenvolvimento de Sistemas com foco em desenvolvimento web. Possuo experiência prática com tecnologias front-end e back-end, buscando constantemente aprimorar minhas habilidades através de projetos pessoais e estudos contínuos. Sou apaixonado por criar soluções que resolvam problemas reais e estou sempre ansioso para aprender novas tecnologias e metodologias.",
      "contact": {
        "email": "jonathanfdsn@gmail.com",
        "links": {
          "github": "https://github.com/jfdsn",
          "linkedin": "https://www.linkedin.com/in/jfdsn/"
        }
      },
      "skills": {
        "frontend": ["HTML5", "CSS3", "Sass", "JavaScript", "TypeScript", "React", "Vue", "Next", "Styled Components"],
        "backend": ["Node", "Express", "PostgreSQL", "MySQL", "TypeORM", "JWT", "bcrypt"],
        "testing": ["Jest", "React Testing Library"],
        "devops": ["Docker", "Git", "Github", "CI/CD"],
        "outros": ["API RESTful", "Integração de APIs", "Windows", "Linux"]
      },
      "learning": {
        "current": ["GraphQL", "MongoDB", "AWS"],
        "interests": ["Desenvolvimento Mobile", "Inteligência Artificial"]
      },
      "certifications": [
        {
          "id": "Conteudo futuro",
          "name": "Desenvolvimento Web Full Stack",
          "issuer": "Plataforma de Curso",
          "date": "2023",
          "url": "https://exemplo.com/certificado"
        }
      ]
    },

    "projects": [
      {
        "id": "1",
        "type": "fullstack",
        "name": "Fastaxi",
        "short_description": "Aplicativo de simulação de corridas estilo táxi, com backend em Node.js e frontend em React.",
        "full_description": "Projeto fullstack desenvolvido como solução para um teste técnico, simulando um aplicativo de corridas estilo táxi. O backend consiste em uma API RESTful desenvolvida com Node.js, Express, TypeScript e SqLite, enquanto o frontend é uma SPA criada com React e TypeScript. A aplicação contempla funcionalidades de estimativa de viagem, confirmação e histórico de corridas, com comunicação direta entre frontend e backend.",
        "functionality": "No frontend, implementei uma interface responsiva que permite ao usuário calcular a rota via API do Google Maps, solicitar uma corrida, escolher um dos motoristas disponíveis baseados em suas informações detalhadas, confirmar a viagem e consultar o histórico de deslocamentos. No backend, construí três endpoints principais: estimativa de corrida, confirmação e listagem de histórico, integrando com a API do Google Maps para cálculo de rotas e respeitando todas as regras de validação exigidas no teste prático.",
        "challenges": "O maior desafio foi garantir a integridade e robustez das regras de negócio, especialmente as validações envolvendo a escolha de motoristas e a verificação da rota. A integração com a API do Google Maps exigiu atenção ao tratamento de erros e estruturação de respostas. Além disso, me preocupei em manter a aplicação modular e escalável, utilizando o padrão MVC no backend e boas práticas de organização no frontend.",
        "technologies": ["React", "TypeScript", "Node.js", "Express", "SqLite", "Sequelize", "Docker"],
        "images": [
          {
            "url": "https://github.com/jfdsn/fastaxi/blob/main/public/home-page.png?raw=true",
            "alt": "Página inicial do Fastaxi"
          },
          {
            "url": "https://github.com/jfdsn/fastaxi/blob/main/public/history-page.png?raw=true",
            "alt": "Página de histórico de corridas"
          }
        ],
        "links": {
          "github": "https://github.com/jfdsn/fastaxi"
        }
      },
      {
        "id": "2",
        "type": "frontend",
        "name": "FocuStation",
        "short_description": "Aplicativo de produtividade com timer Pomodoro e gerenciamento de tarefas",
        "full_description": "O FocuStation é um aplicativo web desenvolvido com Vue.js 3 e Composition API, projetado para ajudar usuários a manter o foco durante sessões de trabalho ou estudo. O projeto foi criado para aplicar conceitos avançados de Vue.js e explorar a integração com APIs externas.",
        "functionality": "O aplicativo oferece um timer Pomodoro personalizável, um gerenciador de tarefas com persistência local, um gerador de imagens de gatos para pausas relaxantes e um player de vídeo do YouTube para ambientes sonoros. Implementei recursos como notificações do navegador, temas claro/escuro e estatísticas de produtividade.",
        "challenges": "Um dos maiores desafios foi implementar a persistência de dados usando localStorage e garantir que o estado da aplicação permanecesse consistente entre recarregamentos da página. Também foi desafiador integrar a API de gatos e o player do YouTube de forma eficiente.",
        "technologies": ["Vue 3", "JavaScript", "Composition API", "CSS3", "Vite", "LocalStorage API"],
        "images": [
          {
            "url": "https://github.com/jfdsn/Focustation/raw/main/public/Imgs/fullapp.png",
            "alt": "Interface principal do FocuStation"
          },
          {
            "url": "https://github.com/jfdsn/Focustation/raw/main/public/Imgs/focustime.png",
            "alt": "FocuStation working timer ativo"
          }
        ],
        "links": {
          "github": "https://github.com/jfdsn/Focustation",
          "site": "https://focustation.netlify.app/"
        }
      },
      {
        "id": "3",
        "type": "frontend",
        "name": "NG.Cash Site",
        "short_description": "Interface para sistema de transferências financeiras",
        "full_description": "Front-end desenvolvido para o desafio técnico da NG.Cash, uma aplicação de transferências financeiras entre usuários. O projeto foi construído utilizando React com TypeScript, implementando um sistema de autenticação e gerenciamento de transações financeiras.",
        "functionality": "A aplicação possui fluxo completo de autenticação (registro e login), dashboard do usuário com saldo atual, histórico de transações e funcionalidade para realizar novas transferências. Implementei validação de formulários, feedback visual para ações do usuário e tratamento de erros da API.",
        "challenges": "O maior desafio foi implementar o gerenciamento de estado global usando Context API e garantir que o estado de autenticação fosse mantido consistente em toda a aplicação. Também foi importante criar uma interface intuitiva para o processo de transferência de dinheiro.",
        "technologies": ["TypeScript", "React.js", "React Router", "React Hooks", "Context API", "Styled Components"],
        "images": [
          {
            "url": "https://github.com/jfdsn/frontend-ng/raw/main/public/Imgs/home-page.png",
            "alt": "Página inicial da aplicação"
          },
          {
            "url": "https://github.com/jfdsn/frontend-ng/raw/main/public/Imgs/cadastro-page.png",
            "alt": "Cadastro do usuário"
          },
          {
            "url": "https://github.com/jfdsn/frontend-ng/raw/main/public/Imgs/login-page.png",
            "alt": "Login do usuário"
          },
          {
            "url": "https://github.com/jfdsn/frontend-ng/raw/main/public/Imgs/user-page.png",
            "alt": "Dashboard do usuário"
          }
        ],
        "links": {
          "github": "https://github.com/jfdsn/frontend-ng"
        }
      },
      {
        "id": "4",
        "type": "backend",
        "name": "NG.Cash API",
        "short_description": "API para sistema de transferências financeiras",
        "full_description": "Back-end desenvolvido para o desafio técnico da NG.Cash, uma API para gerenciamento de contas e transferências financeiras entre usuários. O projeto foi construído utilizando Node.js com Express e TypeORM para interação com banco de dados PostgreSQL.",
        "functionality": "A API oferece funcionalidades completas de gerenciamento de usuários e transações financeiras. Implementei autenticação JWT, criptografia de senhas, validação de dados, e regras de negócio para transferências. O sistema inclui rotas para registro, login, consulta de saldo, histórico de transações e realização de transferências.",
        "challenges": "Um dos principais desafios foi implementar a lógica de transações financeiras de forma segura, garantindo a atomicidade das operações e evitando condições de corrida. Também foi importante estruturar o código de forma modular e testável, utilizando princípios SOLID.",
        "technologies": ["Node.js", "Express", "TypeORM", "JWT", "bcrypt", "TypeScript", "PostgreSQL"],
        "images": [],
        "links": {
          "github": "https://github.com/jfdsn/backend-ng"
        }
      },
      {
        "id": "5",
        "type": "frontend",
        "name": "Portfolio Pessoal",
        "short_description": "Site de portfólio desenvolvido com Next.js",
        "full_description": "Portfolio pessoal desenvolvido com Next.js para apresentar minha trajetória profissional, habilidades e projetos. O site foi projetado para ser responsivo, acessível e com boa performance, seguindo as melhores práticas de desenvolvimento web moderno.",
        "functionality": "O site possui uma página inicial com informações sobre meu perfil, uma página de projetos com cards interativos e páginas detalhadas para cada projeto. Implementei geração estática de páginas para melhor performance, animações suaves para melhor experiência do usuário e um design responsivo que funciona bem em todos os dispositivos.",
        "challenges": "Um dos desafios foi estruturar os dados dos projetos de forma flexível e escalável, permitindo fácil adição de novos projetos. Também foi importante garantir que o site tivesse boa performance e acessibilidade, seguindo as diretrizes WCAG.",
        "technologies": ["Next.js", "React.js", "Sass", "JavaScript", "CSS Grid", "CSS Flexbox"],
        "images": [
          {
            "url": "https://github.com/jfdsn/Meu-portfolio/raw/main/public/Imgs/homepage.png",
            "alt": "Página inicial do portfólio"
          },
          {
            "url": "https://github.com/jfdsn/Meu-portfolio/raw/main/public/Imgs/projectspage.png",
            "alt": "Página de projetos"
          },
          {
            "url": "https://github.com/jfdsn/Meu-portfolio/raw/main/public/Imgs/singleprojectpage.png",
            "alt": "Página detalhes do projeto" 
          }
        ],
        "links": {
          "github": "https://github.com/jfdsn/Meu-portfolio",
          "site": "https://meu-portfolio-pied-six.vercel.app/"
        }
      },
      {
        "id": "6",
        "type": "frontend",
        "name": "Vocabys",
        "short_description": "Um aplicativo moderno de vocabulário para aprendizado de idiomas com integração com IA generativa.",
        "full_description": "Vocabys é uma aplicação web interativa desenvolvida com SvelteKit e TypeScript, voltada para o aprendizado de vocabulário em diferentes idiomas. A interface é responsiva, limpa e pensada para oferecer uma experiência prática e envolvente tanto em desktop quanto em mobile.",
        "functionality": "O usuário seleciona o idioma alvo, define a quantidade de palavras e escolhe uma categoria (ou aleatória). Ao clicar em 'Gerar Palavras', a aplicação consulta uma IA generativa (Cohere) para retornar uma lista de vocabulário no formato JSON. Cada palavra vem com suporte a tradução e a pronúncia, permitindo uma prática mais completa.",
        "challenges": "Um dos desafios foi estruturar os dados dos projetos de forma flexível e escalável, permitindo fácil adição de novas línguas. Também foi importante garantir que o site tivesse boa performance e acessibilidade.",
        "technologies": ["SvelteKit", "TypeScript", "JavaScript", "Tailwind CSS", "Cohere API", "Vite"],
        "images": [
          {
            "url": "https://github.com/jfdsn/vocabys/raw/main/static/vocabys1.jpg",
            "alt": "Página inicial do vocabys"
          },
          {
            "url": "https://github.com/jfdsn/vocabys/raw/main/static/vocabys2.jpg",
            "alt": "Página escolha da linguagem"
          },
          {
            "url": "https://github.com/jfdsn/vocabys/raw/main/static/vocabys3.jpg",
            "alt": "Página gerador de vocabulario" 
          }
        ],
        "links": {
          "github": "https://github.com/jfdsn/vocabys"
        }
      }
    ]
}